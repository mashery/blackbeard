/*! blackbeard vbeta | (c) 2017 Chris Ferdinandi | LicenseRef-All Rights Reserved License | http://github.com/mashery/blackbeard */
var customizer=function(){"use strict";var n,t,e,o,i,c,s,r,a,u,d="https://api.github.com/repos/mashery/blackbeard/contents/dist/",l=document.querySelector("#download-custom-js"),f=document.querySelector("#download-custom-css"),m=document.querySelector("#download-size"),h=document.querySelector("#download-init"),p=function(){var n="";if(c.length>0&&(n+=c),s.length>0&&(n+="window.addEventListener('portalAfterRender', function () {"+s+"}, false)"),n.length<1)return void(h.innerHTML="// No initialization needed...");h.innerHTML=c.replace(new RegExp("<","g"),"&lt;").replace(new RegExp(">","g"),"&gt;").trim(),"Prism"in window&&Prism.highlightAll()},g=function(){if(e.length<1)return void p();e.forEach((function(n){var t=n.getAttribute("value");n.classList.contains("has-inits")?atomic.ajax({url:d+"inits/"+t+".js"}).success((function(n){c+=atob(n.content)+"\n\n",p()})).error((function(n){})):p(),n.classList.contains("has-events")?atomic.ajax({url:d+"events/"+t+".js"}).success((function(n){s+="\t"+atob(n.content)+"\n",p()})).error((function(n){})):p()}))},v=function(){atomic.ajax({url:d+"inits/"+t+".js"}).success((function(n){c=atob(n.content),g()})).error((function(n){}))},L=function(n){return Math.round(100*n/1024)/100+"kb"},b=function(){var n=r+a,t=Math.round(100*r/n)+"%",e=Math.round(100*a/n)+"%";m.innerHTML="<p>Total Filesize: <strong>"+L(n)+"</strong> ("+t+" JavaScript and "+e+" CSS)</p>"},j=function(e,o){if(o.length<1)return void(e.innerHTML="No "+("download-custom-js"===e.id?"JavaScript":"CSS")+" Needed");e.classList.remove("disabled"),e.href="data:application/octet-stream;charset=utf-8,"+encodeURIComponent(o),e.innerHTML="Download "+("download-custom-js"===e.id?"JavaScript":"CSS"),e.download=t+n+("download-custom-js"===e.id?".js":".css"),b()},S=function(){l.classList.add("disabled"),l.href="",l.innerHTML="Generating...",f.classList.add("disabled"),f.href="",f.innerHTML="Generating...",m.innerHTML="",h.innerHTML="Generating..."},w=function(){if(e.length<1)return j(l,o),void j(f,i);e.forEach((function(t){var e=t.getAttribute("value");t.classList.contains("has-js")?atomic.ajax({url:d+"js/"+e+n+".js"}).success((function(n){o+=atob(n.content),r+=n.size,j(l,o)})).error((function(n){})):j(l,o),t.classList.contains("has-css")?atomic.ajax({url:d+"css/"+e+n+".css"}).success((function(n){i+=atob(n.content),a+=n.size,j(f,i)})).error((function(n){})):j(f,i)}))},M=function(){atomic.ajax({url:d+"css/"+t+n+".css"}).success((function(n){i=atob(n.content),a+=n.size,w()})).error((function(n){}))},T=function(){S(),n="production"===document.querySelector('input[name="compression"]:checked').getAttribute("value")?".min.beta":"",t=document.querySelector('input[name="layout"]:checked').getAttribute("value"),e=document.querySelectorAll('input[name="plugins"]:checked'),o="",i="",c="",s="",r=0,a=0,M(),v()},y=function(){u&&clearTimeout(u),u=setTimeout(T,500)},H=function(n){n.target.closest('input[name="compression"], input[name="layout"], input[name="plugins"]')&&y()};if(!l||!f)return void document.removeEventListener("click",H,!1);document.addEventListener("click",H,!1),y()};