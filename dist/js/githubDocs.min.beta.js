/*! blackbeard vbeta | (c) 2017 Chris Ferdinandi | LicenseRef-All Rights Reserved License | http://github.com/mashery/blackbeard */
var githubDocs=function(t){"use strict";if("atob"in window||(function(){function t(t){this.message=t}var e="undefined"!=typeof exports?exports:"undefined"!=typeof self?self:$.global,r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";t.prototype=new Error,t.prototype.name="InvalidCharacterError",e.btoa||(e.btoa=function(e){for(var o,n,a=String(e),i=0,s=r,c="";a.charAt(0|i)||(s="=",i%1);c+=s.charAt(63&o>>8-i%1*8)){if((n=a.charCodeAt(i+=.75))>255)throw new t("'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.");o=o<<8|n}return c}),e.atob||(e.atob=function(e){var o=String(e).replace(/[=]+$/,"");if(o.length%4==1)throw new t("'atob' failed: The string to be decoded is not correctly encoded.");for(var n,a,i=0,s=0,c="";a=o.charAt(s++);~a&&(n=i%4?64*n+a:a,i++%4)?c+=String.fromCharCode(255&n>>(-2*i&6)):0)a=r.indexOf(a);return c})})(),window.mashery.globals.github){var e={selector:".content",user:null,repo:null,root:"",runScripts:!1,loading:"<p>Loading...</p>",failMessage:'<p>Unable to load content. Visit <a target="_blank" href="https://github.com/mashery/blackbeard/tree/master/docs/'+mashery.globals.github+'">https://github.com/mashery/blackbeard/tree/master/docs/'+mashery.globals.github+"</a> to view the documentation.</p>"},r=m$.extend(e,t||{});if(r.user&&r.repo){var o=document.querySelector(r.selector);if(o){o.innerHTML=r.loading;var n=function(t){o.innerHTML=m$.convertMarkdown(t),r.runScripts&&o.querySelectorAll("script").forEach((function(t){new Function(t.innerHTML)()})),m$.fixLocation(),"Prism"in window&&Prism.highlightAll(),m$.emitEvent("portalAfterGitHubRender")},a=sessionStorage.getItem("portalGHDocs_"+window.mashery.contentId);a?n(a):atomic.ajax({url:"https://api.github.com/repos/"+r.user+"/"+r.repo+"/contents/"+r.root+mashery.globals.github}).success((function(t){var e=window.atob(t.content);n(e),sessionStorage.setItem("portalGHDocs_"+window.mashery.contentId,e)})).error((function(t){o.innerHTML=r.failMessage,m$.emitEvent("portalAfterGitHubError")}))}}}};